git:
  depth: false
  quiet: true
cache: npm
before_install:
  - echo '{}' > disabled.json
  - sed 's/MAPBOX_TOKEN/dummy_token/' settings.json.example > settings.json
  - cp firebase-config.json.example firebase-config.json
  - echo "${SETTINGS_DEV}" | base64 -d > settings.json.dev
  - echo "${SETTINGS_PROD}" | base64 -d > settings.json.prod
  - node -e 'const fs = require("fs"); const file = fs.readFileSync("settings.json.dev", "utf-8"); try{ JSON.parse(file); process.exit(0)} catch { process.stdout.write(file); process.exit(1) }'
  - echo "${FIREBASE_DEV}" | base64 -d > firebase-config.json.dev
  - echo "${FIREBASE_PROD}" | base64 -d > firebase-config.json.prod
install:
  - npm ci
language: node_js
node_js:
  - '12'
script:
  - npm run lint
  - npm run stylelint
  - npm run release
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - 'if [[ "$TRAVIS_PULL_REQUEST" = "false" && "$TRAVIS_BRANCH" = "master" ]];then
      docker build -t "chronmaps/frontend:release-prod" --target release --build-arg CFG_EXT=prod .;
      docker push "chronmaps/frontend:release-prod";
    else
      docker build -t "chronmaps/frontend:release-dev" --target release --build-arg CFG_EXT=dev .;
      docker push "chronmaps/frontend:release-dev";
    fi'
